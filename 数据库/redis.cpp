------------------------------------------------------
教程：http://www.runoob.com/redis/redis-tutorial.html
特点：
数据保存在内存中，定时更新到文件中。速度极快，系统宕机后通过文件恢复。
适用于数据量小，但是更新频繁的数据。
支持丰富的数据类型，也叫数据结构数据库，支持：字符串、列表、集合、散列表、有序集合。
支持主从模式。
支持批量操作，且操作都是原子的。
支持各种语言的API。
每种数据类型都有自己的操作命令。
------------------------------------------------------
数据类型：
String（字符串）  键值对   每个value最大512MB。
Hash（哈希）   键值对集合。每个 hash 可以存储 232 -1 键值对（40多亿）。
List（列表）  Redis 列表是简单的字符串列表，按照插入顺序排序。你可以添加一个元素到列表的头部（左边）或者尾部（右边）。
Set（集合） Redis的Set是string类型的无序集合。集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。
zset(sorted set：有序集合)  不允许重复的成员。关联一个double分数来排序（升序），但是分数可以重复。
------------------------------------------------------
超级日志
发布订阅    Redis 发布订阅(pub/sub)是一种消息通信模式：发送者(pub)发送消息，订阅者(sub)接收消息。
事物        Redis 事务可以一次执行多个命令
脚本
连接        密码，切换数据库
服务器      管理客户端，客户端有名称，可以删除所有key，管理配置文件，同步数据到硬盘
数据备份与恢复
安全        密码管理
性能测试
客户端连接   可以设置最大连接数
管道技术
分区        可以构建更大的数据库
------------------------------------------------------
-------------------------------------------------------
-------------------------------------------------------
-------------------------------
安装
redis + hiredis
hiredis是c客户端API
-------------------------------
https://www.zybuluo.com/LIUHUAN/note/364481
/**连接数据库*/
redisContext *redisConnect(const char *ip, int port);
/**发送命令请求*/
void *redisCommand(redisContext *c, const char *format, ...);
void *redisCommandArgv(redisContext *c, int argc, const char **argv, const size_t *argvlen);
void redisAppendCommand(redisContext *c, const char *format, ...);
void redisAppendCommandArgv(redisContext *c, int argc, const char **argv, const size_t *argvlen);
/*释放资源*/
void freeReplyObject(void *reply);
void redisFree(redisContext *c);
----------------
数据库连接
redisContext *redisConnect(const char *ip, int port);   127.0.0.1  6379
----------------------------------------
命令功能
http://redisdoc.com/index.html
----------------------------------------
----------------
字符串
数据结构：key value   （键值对）
1 key value都为字符串
2 value可以当做数字进行加减法，++ -- += -= 支持浮点数
3 可以同时操作多个key
4 可以设置生存时间，单位 秒 毫秒
5 返回旧值同时设置新值
6 字符串长度
7 追加
8 覆盖指定位置
9 截取字符串
----------------
哈希表   
数据结构： key  field  value    （key为表，field为域，value为值）
1 域的数量
2 字符串长度
3 支持浮点数运算
4 返回 所有域，所有值，所有域值对
----------------
列表
数据结构： 字符串数组
1 插入：左插入，右插入，在下标之前(后)插入
2 移除：左移除，右移除
3 同时执行弹出和插入
4 移除n个等于value的元素
5 长度
6 支持下标操作，区间操作
7 支持阻塞模式弹出，可以设置超时时间
----------------
集合
1 查找元素
2 随机移除。移动
3 大小
4 交集，并集，差集
----------------
有序集合
1 key 序号 value
2 序号做 加法，乘法
3 集合大小
4 统计区间元素个数
5 排序操作，排序规则（序号，元素）
----------------
超级日志  HyperLogLog 
1 不保存数据，统计数据
----------------
位图
1 保存位数据，支持（与，或，非，异或）操作
----------------
数据库
1 类型，改名 key数量 匹配模式查找key 迭代 排序，选择数据库，交换数据库
----------------
自动过期
1 过期时间，指定过期日期，单位 秒，毫秒
-----------------
持久化
1 保存数据到硬盘（同步，异步）
2 最新保存数据时间
-----------------
